volumes:
  postgres_volume:
  elasticsearch_data:

services:
  movie_app:
    build:
      context: ..
      dockerfile: movie_service/Dockerfile
    restart: always
    depends_on:
      movie_db:
        condition: service_healthy
    ports:
      - "8083:8083"
    networks:
      - cassette-world

  movie_db:
    build:
      dockerfile: pg.Dockerfile
    container_name: movie_db
    environment:
      - POSTGRES_DB=movie_db
      - POSTGRES_USER=movie_user
      - POSTGRES_PASSWORD=movie_user_password
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "sh -c 'pg_isready -U movie_user -d movie_db'",
        ]
      interval: 2s
      timeout: 3s
      retries: 3
    ports:
      - "5433:5432"
    networks:
      - cassette-world

  elasticsearch:
    image: elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xmx512m -Xms512m"
      - "xpack.security.enabled=false"
    volumes:
      - "elasticsearch_data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    networks:
      - cassette-world

networks:
  cassette-world:
    external:
      name: cassette-world

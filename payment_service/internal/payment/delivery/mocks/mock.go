// Code generated by MockGen. DO NOT EDIT.
// Source: delivery.go

// Package mock_delivery is a generated GoMock package.
package mock_delivery

import (
	context "context"
	reflect "reflect"

	dto "github.com/go-park-mail-ru/2024_2_GOATS/payment_service/internal/payment/service/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockPaymentServiceInterface is a mock of PaymentServiceInterface interface.
type MockPaymentServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceInterfaceMockRecorder
}

// MockPaymentServiceInterfaceMockRecorder is the mock recorder for MockPaymentServiceInterface.
type MockPaymentServiceInterfaceMockRecorder struct {
	mock *MockPaymentServiceInterface
}

// NewMockPaymentServiceInterface creates a new mock instance.
func NewMockPaymentServiceInterface(ctrl *gomock.Controller) *MockPaymentServiceInterface {
	mock := &MockPaymentServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentServiceInterface) EXPECT() *MockPaymentServiceInterfaceMockRecorder {
	return m.recorder
}

// CreatePayment mocks base method.
func (m *MockPaymentServiceInterface) CreatePayment(ctx context.Context, createData *dto.CreatePaymentData) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePayment", ctx, createData)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePayment indicates an expected call of CreatePayment.
func (mr *MockPaymentServiceInterfaceMockRecorder) CreatePayment(ctx, createData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePayment", reflect.TypeOf((*MockPaymentServiceInterface)(nil).CreatePayment), ctx, createData)
}

// MarkPaid mocks base method.
func (m *MockPaymentServiceInterface) MarkPaid(ctx context.Context, pID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MarkPaid", ctx, pID)
	ret0, _ := ret[0].(error)
	return ret0
}

// MarkPaid indicates an expected call of MarkPaid.
func (mr *MockPaymentServiceInterfaceMockRecorder) MarkPaid(ctx, pID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarkPaid", reflect.TypeOf((*MockPaymentServiceInterface)(nil).MarkPaid), ctx, pID)
}

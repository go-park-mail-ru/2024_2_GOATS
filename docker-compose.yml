volumes:
  postgres_volume:
  redis:

services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    volumes:
      - /home/ubuntu/images:/home/ubuntu/images
    ports:
      - 8080:8080
    networks:
      - cassette-world
  redis:
    image: 'redis:latest'
    command: redis-server
    container_name: redis
    volumes:
      - redis:/data
    networks:
      - cassette-world
  db:
    image: postgres:latest
    container_name: db
    environment:
      - "POSTGRES_DB=cassette-world"
      - "POSTGRES_USER=test"
      - "POSTGRES_PASSWORD=test"
    volumes:
      - ./dev/SQL:/docker-entrypoint-initdb.d/
      - "postgres_volume:/var/lib/postgresql/data"
    networks:
      - cassette-world
  nginx:
    build: ./nginx
    volumes:
      - ../frontend/2024_2_GOATS/dist:/var/www/dist
      - ../disk:/usr/share/nginx/html/static
      - ../images:/usr/share/nginx/html/images
      - ../frontend/2024_2_GOATS/public/assets:/usr/share/nginx/html/assets
    ports:
      - 80:80
    depends_on:
      - app
    restart: "always"
    networks:
      - cassette-world

networks:
  cassette-world:
  default:
    external:
      name: cassette-world # Не забыть создать сеть перед деплоем

volumes:
  grafana-data:

services:
  facade_app:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8080:8080
    networks:
      - cassette-world

  nginx:
    build: ./nginx
    volumes:
      - ../frontend/2024_2_GOATS/dist:/var/www/dist
      - ../disk:/usr/share/nginx/html/static
      - ../images:/usr/share/nginx/html/images
      - ../frontend/2024_2_GOATS/public/assets:/usr/share/nginx/html/assets
    ports:
      - 80:80
    depends_on:
      - facade_app
    restart: "always"
    networks:
      - cassette-world

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: "always"
    networks:
      - cassette-world

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    restart: "always"
    networks:
      - cassette-world

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    pid: "host"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

networks:
  cassette-world:
    external:
      name: cassette-world

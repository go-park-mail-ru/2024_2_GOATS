// Code generated by MockGen. DO NOT EDIT.
// Source: delivery.go

// Package mock_delivery is a generated GoMock package.
package mock_delivery

import (
	context "context"
	reflect "reflect"

	errors "github.com/go-park-mail-ru/2024_2_GOATS/internal/app/errors"
	models "github.com/go-park-mail-ru/2024_2_GOATS/internal/app/models"
	gomock "github.com/golang/mock/gomock"
)

// MockUserServiceInterface is a mock of UserServiceInterface interface.
type MockUserServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceInterfaceMockRecorder
}

// MockUserServiceInterfaceMockRecorder is the mock recorder for MockUserServiceInterface.
type MockUserServiceInterfaceMockRecorder struct {
	mock *MockUserServiceInterface
}

// NewMockUserServiceInterface creates a new mock instance.
func NewMockUserServiceInterface(ctrl *gomock.Controller) *MockUserServiceInterface {
	mock := &MockUserServiceInterface{ctrl: ctrl}
	mock.recorder = &MockUserServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceInterface) EXPECT() *MockUserServiceInterfaceMockRecorder {
	return m.recorder
}

// AddFavorite mocks base method.
func (m *MockUserServiceInterface) AddFavorite(ctx context.Context, favData *models.Favorite) *errors.ServiceError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddFavorite", ctx, favData)
	ret0, _ := ret[0].(*errors.ServiceError)
	return ret0
}

// AddFavorite indicates an expected call of AddFavorite.
func (mr *MockUserServiceInterfaceMockRecorder) AddFavorite(ctx, favData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFavorite", reflect.TypeOf((*MockUserServiceInterface)(nil).AddFavorite), ctx, favData)
}

// DestroyFavorite mocks base method.
func (m *MockUserServiceInterface) DestroyFavorite(ctx context.Context, favData *models.Favorite) *errors.ServiceError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroyFavorite", ctx, favData)
	ret0, _ := ret[0].(*errors.ServiceError)
	return ret0
}

// DestroyFavorite indicates an expected call of DestroyFavorite.
func (mr *MockUserServiceInterfaceMockRecorder) DestroyFavorite(ctx, favData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroyFavorite", reflect.TypeOf((*MockUserServiceInterface)(nil).DestroyFavorite), ctx, favData)
}

// GetFavorites mocks base method.
func (m *MockUserServiceInterface) GetFavorites(ctx context.Context, usrID int) ([]models.MovieShortInfo, *errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFavorites", ctx, usrID)
	ret0, _ := ret[0].([]models.MovieShortInfo)
	ret1, _ := ret[1].(*errors.ServiceError)
	return ret0, ret1
}

// GetFavorites indicates an expected call of GetFavorites.
func (mr *MockUserServiceInterfaceMockRecorder) GetFavorites(ctx, usrID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFavorites", reflect.TypeOf((*MockUserServiceInterface)(nil).GetFavorites), ctx, usrID)
}

// UpdatePassword mocks base method.
func (m *MockUserServiceInterface) UpdatePassword(ctx context.Context, passwordData *models.PasswordData) *errors.ServiceError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePassword", ctx, passwordData)
	ret0, _ := ret[0].(*errors.ServiceError)
	return ret0
}

// UpdatePassword indicates an expected call of UpdatePassword.
func (mr *MockUserServiceInterfaceMockRecorder) UpdatePassword(ctx, passwordData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePassword", reflect.TypeOf((*MockUserServiceInterface)(nil).UpdatePassword), ctx, passwordData)
}

// UpdateProfile mocks base method.
func (m *MockUserServiceInterface) UpdateProfile(ctx context.Context, profileData *models.User) *errors.ServiceError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateProfile", ctx, profileData)
	ret0, _ := ret[0].(*errors.ServiceError)
	return ret0
}

// UpdateProfile indicates an expected call of UpdateProfile.
func (mr *MockUserServiceInterfaceMockRecorder) UpdateProfile(ctx, profileData interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateProfile", reflect.TypeOf((*MockUserServiceInterface)(nil).UpdateProfile), ctx, profileData)
}

// Code generated by MockGen. DO NOT EDIT.
// Source: delivery.go

// Package mock_delivery is a generated GoMock package.
package mock_delivery

import (
	context "context"
	reflect "reflect"

	dto "github.com/go-park-mail-ru/2024_2_GOATS/auth_service/internal/auth/service/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthServiceInterface is a mock of AuthServiceInterface interface.
type MockAuthServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceInterfaceMockRecorder
}

// MockAuthServiceInterfaceMockRecorder is the mock recorder for MockAuthServiceInterface.
type MockAuthServiceInterfaceMockRecorder struct {
	mock *MockAuthServiceInterface
}

// NewMockAuthServiceInterface creates a new mock instance.
func NewMockAuthServiceInterface(ctrl *gomock.Controller) *MockAuthServiceInterface {
	mock := &MockAuthServiceInterface{ctrl: ctrl}
	mock.recorder = &MockAuthServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServiceInterface) EXPECT() *MockAuthServiceInterfaceMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockAuthServiceInterface) CreateSession(ctx context.Context, srvCreateCookieReq *dto.SrvCreateCookie) (*dto.Cookie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", ctx, srvCreateCookieReq)
	ret0, _ := ret[0].(*dto.Cookie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockAuthServiceInterfaceMockRecorder) CreateSession(ctx, srvCreateCookieReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockAuthServiceInterface)(nil).CreateSession), ctx, srvCreateCookieReq)
}

// DestroySession mocks base method.
func (m *MockAuthServiceInterface) DestroySession(ctx context.Context, cookie string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DestroySession", ctx, cookie)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DestroySession indicates an expected call of DestroySession.
func (mr *MockAuthServiceInterfaceMockRecorder) DestroySession(ctx, cookie interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DestroySession", reflect.TypeOf((*MockAuthServiceInterface)(nil).DestroySession), ctx, cookie)
}

// GetSessionData mocks base method.
func (m *MockAuthServiceInterface) GetSessionData(ctx context.Context, cookie string) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSessionData", ctx, cookie)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSessionData indicates an expected call of GetSessionData.
func (mr *MockAuthServiceInterfaceMockRecorder) GetSessionData(ctx, cookie interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSessionData", reflect.TypeOf((*MockAuthServiceInterface)(nil).GetSessionData), ctx, cookie)
}

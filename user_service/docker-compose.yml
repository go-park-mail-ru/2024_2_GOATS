services:
  user_app:
    container_name: user_app
    image: unicoyal/user_app:latest
    build:
      context: ..
      dockerfile: user_service/Dockerfile
    volumes:
      - /home/ubuntu/images:/home/ubuntu/images
    depends_on:
      user_db:
        condition: service_healthy
    ports:
      - 8082:8082
    networks:
      - cassette-world

  user_db:
    build:
      dockerfile: pg.Dockerfile
    container_name: user_db
    environment:
      - POSTGRES_DB=${USER_SERVICE_POSTGRES_DB}
      - POSTGRES_USER=${USER_SERVICE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_SERVICE_POSTGRES_PASSWORD}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "sh -c 'pg_isready -U user_service_user -d user_db'",
        ]
      interval: 2s
      timeout: 3s
      retries: 3
    ports:
      - "5432:5432"
    networks:
      - cassette-world

networks:
  cassette-world:
    external:
      name: cassette-world

volumes:
  postgres_volume:
